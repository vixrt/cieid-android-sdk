buildscript {
    repositories {
        jcenter()
    }
}

apply plugin: 'maven-publish'

afterEvaluate { project ->

    def publishSources = shouldPublishSources()

    if (publishSources) {
        task androidSourcesJar(type: Jar) {
            getArchiveClassifier().set('sources')
            from android.sourceSets.main.java.source
        }

        artifacts {
            archives androidSourcesJar
        }
    }

    publishing {
        repositories {
            maven {
                url = getRepositoryUrl()
                credentials {
                    username = GITHUB_USER
                    password = GITHUB_TOKEN
                }
            }
        }
        publications {
            release(MavenPublication) {
                from components.release
                groupId LIBRARY_GROUP
                version LIBRARY_VERSION
                artifactId LIBRARY_ARTIFACT
                if (publishSources) {
                    artifact androidSourcesJar
                }
                configurePom(pom)
            }
        }
    }
}

def shouldPublishSources() {
    if (hasProperty("LIBRARY_PUBLISH_SOURCES")) {
        return LIBRARY_PUBLISH_SOURCES == "true"
    } else {
        return true
    }
}

def getRepositoryUrl() {
    return "https://maven.pkg.github.com/" + GITHUB_OWNER + "/" + GITHUB_REPOSITORY
}

def configurePom(pom) {
    pom.name = POM_NAME
    pom.packaging = POM_PACKAGING
    pom.description = POM_DESCRIPTION
    pom.url = POM_URL

    pom.scm {
        url = POM_SCM_URL
        connection = POM_SCM_CONNECTION
        developerConnection = POM_SCM_DEV_CONNECTION
    }

    if (hasProperty('POM_LICENSE_NAME')) {
        pom.licenses {
            license {
                name = POM_LICENCE_NAME
                url = POM_LICENCE_URL
                distribution = POM_LICENCE_DIST
            }
        }
    }

    pom.developers {
        developer {
            id = POM_DEVELOPER_ID
            name = POM_DEVELOPER_NAME
        }
    }
}